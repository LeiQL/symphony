apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "symphony.fullname" . }}-api
  labels:
    app: {{ include "symphony.appSelector" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "symphony.appSelector" . }}
  template:
    metadata:
      labels:
        app: {{ include "symphony.appSelector" . }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
      {{- end }}
      serviceAccountName: {{ include "symphony.serviceAccountName" . }}
      {{- if and .Values.Azure.proxySettings.isProxyEnabled .Values.Azure.proxySettings.proxyCert }}
      initContainers:
      - name: init-porxy-cert-dir
        image: mcr.microsoft.com/mirror/docker/library/busybox:1.35
        command: ['sh', '-c', "mkdir -p /etc/pki/ca-trust/extracted/pem /etc/pki/ca-trust/extracted/openssl /etc/pki/ca-trust/extracted/java /etc/pki/ca-trust/extracted/edk2"]
        volumeMounts:
          - name: ssl-certs
            mountPath: /etc/pki/ca-trust/extracted/
      {{ end }}
      containers:
      - name: symphony-api
        securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
        image: {{ .Values.paiImage.repository }}:{{ .Values.paiImage.tag }}
        imagePullPolicy: {{ .Values.paiImage.pullPolicy }}
        ports:
        - containerPort: {{ .Values.Symphony.api.httpsport }}
        {{- if .Values.Symphony.api.httpport }}
        - containerPort: {{ .Values.Symphony.api.httpport }}
        {{- end }}
        env:          
          - name: "HELM_NAMESPACE"
            value: default
          - name: "CONFIG"
            value: /etc/symphony-api/config/symphony-api.json
          - name: SERVICE_ACCOUNT_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: SYMPHONY_CONTROLLER_SERVICE_ACCOUNT_NAME
            value: '{{ include "symphony.fullname" . }}-controller-manager'
          {{ toYaml .Values.Symphony.api.env | indent 10 }}
        envFrom:
          - secretRef:
              name: {{ include "symphony.fullname" . }}-auth
          {{ if .Values.Symphony.api.proxySettings.isProxyEnabled }}
          - secretRef:
              name: {{ .Values.Symphony.api.proxySettings.secretName }}
          {{ end }}
          {{ if .Values.Symphony.api.configMap }}
          - configMapRef:
              name: {{ .Values.Symphony.api.configMap }}
          {{ end }}
        volumeMounts:
        - name: symphony-api-config
          mountPath: /etc/symphony-api/config
        {{ toYaml .Values.Symphony.api.volumeMounts | indent 8 }}

      {{- if .Values.global.azure.identity.mSIAdapterYaml }}
      - name: msi-adapter
        env:
        - name: TOKEN_NAMESPACE
          value: {{ .Release.Namespace }}
        {{- .Values.global.azure.identity.mSIAdapterYaml | nindent 8 }}
      {{- end }}
      volumes:
        - name: symphony-api-config
          configMap:
            name: {{ include "symphony.configmapName" . }}
        {{ toYaml .Values.Symphony.api.volumes | indent 8 }}
